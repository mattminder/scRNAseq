import pickle as pkl


def predict_from_files(x, classif_path, classif_type = 'skl'):
    """
    Uses input numpy array x to generate predictions using the pickled object
    in classif_path.
    :param x: numpy array containing features for classifier
    :param classif_path: path to pickled classifier
    :param classif_type: type of classifier, either 'skl' for scikit learn, 'xgb' for xg boost
    :return: Stemness predictions as generated by input classifier
    """
    if (classif_type == 'skl'):
        classif_file = open(classif_path, "rb")
        classif = pkl.load(classif_file)
        classif_file.close()
        return classif.predict_proba(x)

    if (classif_type == 'xgb'):
        classif_file = open(classif_path, "rb")
        classif = pkl.load(classif_file)
        classif_file.close()
        return classif.predict(x)


def transform_from_files(x, transf_path, transf_type='skl'):
    """
    Uses input numpy array x, transforms it according to transformation in pickled object in path transf_path
    :param x: Input numpy array to transform
    :param transf_path: Path to transformation object
    :param transf_type: Type of transformation. 'skl' for sklearn-based transformation, i.e. pca and nolowvar.
    :return: Transformed x
    """
    if (transf_type == 'skl'):
        transf_file = open(transf_path, "rb")
        transf = pkl.load(transf_file)
        transf_file.close()
        return transf.transform(x)
